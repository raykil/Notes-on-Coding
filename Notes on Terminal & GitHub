- Access to ssh: ssh jkil@lxplus.cern.ch

- Some directories and their memories
  - /afs/cern.ch/user/j/jkil/  --> This is 5 GB storage maximum, so I should use it only for keeping code and text files
  - /eos/user/j/jkil/ --> I have 1 TB space here (I can do "ls /eos/user/j/jkil/" to check that it works)

- Some notes on privacy:
  - /afs/cern.ch/user/j/jkil/public/ --> Everybody on CERN has access
  - /afs/cern.ch/user/j/jkil/private/ and /eos/user/j/jkil/ --> Only I have access

- Commands in code (enter using "vi" command):
  - "/" command enables the search function
    - "n" command moves to the next entry of the search

- Commnands for Terminal
  - "ls -ltr" command gives info of all the files that are in the current directory (such as the time that the file was created.)
  - How to copy a file from LXPLUS to my local machine:
    - scp "jkil@lxplus.cern.ch:/eos/user/j/jkil/SUEP/output_graphs/{filename}" .
      - the last "." means the current directory I am in.

- Installing ROOT:
  i) pushd /eos/user/j/jkil/SUEP/CMSSW_10_6_20/src/
    - "pushd" command moves to the directory specified, while remembering the diretory that I am currently in.
  ii) cmsenv
    - This means to load all libraries used by CMS. This command only works in src folder.
  iii) pushd
    - This command brings me back to the original directory that I was in.


<< git commands >>

- How to get a changed file on GitHub to my locale:
  - use "git fetch me" command

- How to commit in my local Terminal:
  i) Change the code that I want to change
  ii) use "git add {filename}" command to specify which files I want to commit.
  iii) use "git commit" command to commit the added files.
  
- "git merge me/master"
  - "me" in the command is name of my locale
- "git status" command tells me which things are changed
- "git remote -v" command tells me the locations where same(locally edited) copies are

   add        Add file contents to the index
   bisect     Find by binary search the change that introduced a bug
   branch     List, create, or delete branches
   checkout   Checkout a branch or paths to the working tree
   clone      Clone a repository into a new directory
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   fetch      Download objects and refs from another repository
   grep       Print lines matching a pattern
   init       Create an empty Git repository or reinitialize an existing one
   log        Show commit logs
   merge      Join two or more development histories together
   mv         Move or rename a file, a directory, or a symlink
   pull       Fetch from and merge with another repository or a local branch
   push       Update remote refs along with associated objects
   rebase     Forward-port local commits to the updated upstream head
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index
   show       Show various types of objects
   status     Show the working tree status
   tag        Create, list, delete or verify a tag object signed with GPG


<<Notes on GitHub Tutorial>>

- Repository (repo) = a folder for a project, can have multiple files
- Commit = save
- Commit hash = unique alphanumeral identifier for a particular commit
- Branch = another “experimental” version of a main project (branching off)
    - Main branch = the main branch
- Insights > Network: Visualizes the tree (all the branches)
- Pull request = Requesting to take the things in one branch and put it into another branch.
- Merge =
- How to put the version of different branch into master branch: 
- Fork = Making a copy of a whole directory from another user to my account. Changes X affect the original directory.
